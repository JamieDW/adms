(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[1],{

/***/ "./node_modules/vform/dist/vform.common.js":
/*!*************************************************!*\
  !*** ./node_modules/vform/dist/vform.common.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"./\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(\"lVK7\");\n\n\n/***/ }),\n\n/***/ \"OMN4\":\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\n/***/ }),\n\n/***/ \"lVK7\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: external \"axios\"\nvar external__axios_ = __webpack_require__(\"OMN4\");\nvar external__axios__default = /*#__PURE__*/__webpack_require__.n(external__axios_);\n\n// CONCATENATED MODULE: ./src/util.js\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\r\n * Deep copy the given object.\r\n *\r\n * @param  {Object} obj\r\n * @return {Object}\r\n */\nfunction deepCopy(obj) {\n  if (obj === null || _typeof(obj) !== 'object') {\n    return obj;\n  }\n\n  var copy = Array.isArray(obj) ? [] : {};\n  Object.keys(obj).forEach(function (key) {\n    copy[key] = deepCopy(obj[key]);\n  });\n  return copy;\n}\n/**\r\n * If the given value is not an array, wrap it in one.\r\n *\r\n * @param  {Any} value\r\n * @return {Array}\r\n */\n\nfunction arrayWrap(value) {\n  return Array.isArray(value) ? value : [value];\n}\n// CONCATENATED MODULE: ./src/Errors.js\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction Errors__typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { Errors__typeof = function _typeof(obj) { return typeof obj; }; } else { Errors__typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return Errors__typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar Errors_Errors =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * Create a new error bag instance.\r\n   */\n  function Errors() {\n    _classCallCheck(this, Errors);\n\n    this.errors = {};\n  }\n  /**\r\n   * Set the errors object or field error messages.\r\n   *\r\n   * @param {Object|String} field\r\n   * @param {Array|String|undefined} messages\r\n   */\n\n\n  _createClass(Errors, [{\n    key: \"set\",\n    value: function set(field, messages) {\n      if (Errors__typeof(field) === 'object') {\n        this.errors = field;\n      } else {\n        this.set(_extends({}, this.errors, _defineProperty({}, field, arrayWrap(messages))));\n      }\n    }\n    /**\r\n     * Get all the errors.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: \"all\",\n    value: function all() {\n      return this.errors;\n    }\n    /**\r\n     * Determine if there is an error for the given field.\r\n     *\r\n     * @param  {String} field\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(field) {\n      return this.errors.hasOwnProperty(field);\n    }\n    /**\r\n     * Determine if there are any errors for the given fields.\r\n     *\r\n     * @param  {...String} fields\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"hasAny\",\n    value: function hasAny() {\n      var _this = this;\n\n      for (var _len = arguments.length, fields = new Array(_len), _key = 0; _key < _len; _key++) {\n        fields[_key] = arguments[_key];\n      }\n\n      return fields.some(function (field) {\n        return _this.has(field);\n      });\n    }\n    /**\r\n     * Determine if there are any errors.\r\n     *\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"any\",\n    value: function any() {\n      return Object.keys(this.errors).length > 0;\n    }\n    /**\r\n     * Get the first error message for the given field.\r\n     *\r\n     * @param  String} field\r\n     * @return {String|undefined}\r\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(field) {\n      if (this.has(field)) {\n        return this.getAll(field)[0];\n      }\n    }\n    /**\r\n     * Get all the error messages for the given field.\r\n     *\r\n     * @param  {String} field\r\n     * @return {Array}\r\n     */\n\n  }, {\n    key: \"getAll\",\n    value: function getAll(field) {\n      return arrayWrap(this.errors[field] || []);\n    }\n    /**\r\n     * Get the error message for the given fields.\r\n     *\r\n     * @param  {...String} fields\r\n     * @return {Array}\r\n     */\n\n  }, {\n    key: \"only\",\n    value: function only() {\n      var _this2 = this;\n\n      var messages = [];\n\n      for (var _len2 = arguments.length, fields = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        fields[_key2] = arguments[_key2];\n      }\n\n      fields.forEach(function (field) {\n        var message = _this2.get(field);\n\n        if (message) {\n          messages.push(message);\n        }\n      });\n      return messages;\n    }\n    /**\r\n     * Get all the errors in a flat array.\r\n     *\r\n     * @return {Array}\r\n     */\n\n  }, {\n    key: \"flatten\",\n    value: function flatten() {\n      return Object.values(this.errors).reduce(function (a, b) {\n        return a.concat(b);\n      }, []);\n    }\n    /**\r\n     * Clear one or all error fields.\r\n     *\r\n     * @param {String|undefined} field\r\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear(field) {\n      var _this3 = this;\n\n      var errors = {};\n\n      if (field) {\n        Object.keys(this.errors).forEach(function (key) {\n          if (key !== field) {\n            errors[key] = _this3.errors[key];\n          }\n        });\n      }\n\n      this.set(errors);\n    }\n  }]);\n\n  return Errors;\n}();\n\n\n// CONCATENATED MODULE: ./src/Form.js\nfunction Form__typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { Form__typeof = function _typeof(obj) { return typeof obj; }; } else { Form__typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return Form__typeof(obj); }\n\nfunction Form__defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction Form__extends() { Form__extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Form__extends.apply(this, arguments); }\n\nfunction Form__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Form__defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Form__createClass(Constructor, protoProps, staticProps) { if (protoProps) Form__defineProperties(Constructor.prototype, protoProps); if (staticProps) Form__defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\nvar Form_Form =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create a new form instance.\n   *\n   * @param {Object} data\n   */\n  function Form() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    Form__classCallCheck(this, Form);\n\n    this.busy = false;\n    this.successful = false;\n    this.errors = new Errors_Errors();\n    this.originalData = deepCopy(data);\n    Object.assign(this, data);\n  }\n  /**\n   * Fill form data.\n   *\n   * @param {Object} data\n   */\n\n\n  Form__createClass(Form, [{\n    key: \"fill\",\n    value: function fill(data) {\n      var _this = this;\n\n      this.keys().forEach(function (key) {\n        _this[key] = data[key];\n      });\n    }\n    /**\n     * Get the form data.\n     *\n     * @return {Object}\n     */\n\n  }, {\n    key: \"data\",\n    value: function data() {\n      var _this2 = this;\n\n      return this.keys().reduce(function (data, key) {\n        return Form__extends({}, data, Form__defineProperty({}, key, _this2[key]));\n      }, {});\n    }\n    /**\n     * Get the form data keys.\n     *\n     * @return {Array}\n     */\n\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      return Object.keys(this).filter(function (key) {\n        return !Form.ignore.includes(key);\n      });\n    }\n    /**\n     * Start processing the form.\n     */\n\n  }, {\n    key: \"startProcessing\",\n    value: function startProcessing() {\n      this.errors.clear();\n      this.busy = true;\n      this.successful = false;\n    }\n    /**\n     * Finish processing the form.\n     */\n\n  }, {\n    key: \"finishProcessing\",\n    value: function finishProcessing() {\n      this.busy = false;\n      this.successful = true;\n    }\n    /**\n     * Clear the form errors.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.errors.clear();\n      this.successful = false;\n    }\n    /**\n     * Reset the form fields.\n     */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var _this3 = this;\n\n      Object.keys(this).filter(function (key) {\n        return !Form.ignore.includes(key);\n      }).forEach(function (key) {\n        _this3[key] = deepCopy(_this3.originalData[key]);\n      });\n    }\n    /**\n     * Submit the from via a GET request.\n     *\n     * @param  {String} url\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(url) {\n      return this.submit('get', url);\n    }\n    /**\n     * Submit the from via a POST request.\n     *\n     * @param  {String} url\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"post\",\n    value: function post(url) {\n      return this.submit('post', url);\n    }\n    /**\n     * Submit the from via a PATCH request.\n     *\n     * @param  {String} url\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"patch\",\n    value: function patch(url) {\n      return this.submit('patch', url);\n    }\n    /**\n     * Submit the from via a PUT request.\n     *\n     * @param  {String} url\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"put\",\n    value: function put(url) {\n      return this.submit('put', url);\n    }\n    /**\n     * Submit the from via a DELETE request.\n     *\n     * @param  {String} url\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(url) {\n      return this.submit('delete', url);\n    }\n    /**\n     * Submit the form data via an HTTP request.\n     *\n     * @param  {String} method (get, post, patch, put)\n     * @param  {String} url\n     * @param  {Object} config (axios config)\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"submit\",\n    value: function submit(method, url) {\n      var _this4 = this;\n\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      this.startProcessing();\n      var data = method === 'get' ? {\n        params: this.data()\n      } : this.data();\n      return new Promise(function (resolve, reject) {\n        external__axios__default.a.request(Form__extends({\n          url: _this4.route(url),\n          method: method,\n          data: data\n        }, config)).then(function (response) {\n          _this4.finishProcessing();\n\n          resolve(response);\n        }).catch(function (error) {\n          _this4.busy = false;\n\n          if (error.response) {\n            _this4.errors.set(_this4.extractErrors(error.response));\n          }\n\n          reject(error);\n        });\n      });\n    }\n    /**\n     * Extract the errors from the response object.\n     *\n     * @param  {Object} response\n     * @return {Object}\n     */\n\n  }, {\n    key: \"extractErrors\",\n    value: function extractErrors(response) {\n      if (!response.data || Form__typeof(response.data) !== 'object') {\n        return {\n          error: Form.errorMessage\n        };\n      }\n\n      if (response.data.errors) {\n        return Form__extends({}, response.data.errors);\n      }\n\n      if (response.data.message) {\n        return {\n          error: response.data.message\n        };\n      }\n\n      return Form__extends({}, response.data);\n    }\n    /**\n     * Get a named route.\n     *\n     * @param  {String} name\n     * @return {Object} parameters\n     * @return {String}\n     */\n\n  }, {\n    key: \"route\",\n    value: function route(name) {\n      var parameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var url = name;\n\n      if (Form.routes.hasOwnProperty(name)) {\n        url = decodeURI(Form.routes[name]);\n      }\n\n      if (Form__typeof(parameters) !== 'object') {\n        parameters = {\n          id: parameters\n        };\n      }\n\n      Object.keys(parameters).forEach(function (key) {\n        url = url.replace(\"{\".concat(key, \"}\"), parameters[key]);\n      });\n      return url;\n    }\n    /**\n     * Clear errors on keydown.\n     *\n     * @param {KeyboardEvent} event\n     */\n\n  }, {\n    key: \"onKeydown\",\n    value: function onKeydown(event) {\n      if (event.target.name) {\n        this.errors.clear(event.target.name);\n      }\n    }\n  }]);\n\n  return Form;\n}();\n\nForm_Form.routes = {};\nForm_Form.errorMessage = 'Something went wrong. Please try again.';\nForm_Form.ignore = ['busy', 'successful', 'errors', 'originalData'];\n/* harmony default export */ var src_Form = (Form_Form);\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"C://Users//Otinsoft//Code//github//vform//node_modules//.cache//cache-loader\"}!./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/HasError.vue\n//\n//\n//\n//\n/* harmony default export */ var HasError = ({\n  name: 'has-error',\n  props: {\n    form: {\n      type: Object,\n      required: true\n    },\n    field: {\n      type: String,\n      required: true\n    }\n  }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4389a6dd\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/HasError.vue\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.form.errors.has(_vm.field))?_c('div',{staticClass:\"help-block invalid-feedback\",domProps:{\"innerHTML\":_vm._s(_vm.form.errors.get(_vm.field))}}):_vm._e()}\nvar staticRenderFns = []\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/runtime/component-normalizer.js\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  scriptExports = scriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof scriptExports.default\n  if (type === 'object' || type === 'function') {\n    scriptExports = scriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n\n// CONCATENATED MODULE: ./src/components/HasError.vue\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\n\nvar Component = normalizeComponent(\n  HasError,\n  render,\n  staticRenderFns,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ var components_HasError = (Component.exports);\n\n// CONCATENATED MODULE: ./src/components/Alert.js\n/* harmony default export */ var Alert = ({\n  props: {\n    form: {\n      type: Object,\n      required: true\n    },\n    dismissible: {\n      type: Boolean,\n      default: true\n    }\n  },\n  methods: {\n    dismiss: function dismiss() {\n      if (this.dismissible) {\n        this.form.clear();\n      }\n    }\n  }\n});\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"C://Users//Otinsoft//Code//github//vform//node_modules//.cache//cache-loader\"}!./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/AlertError.vue\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ var AlertError = ({\n  name: 'alert-error',\n  extends: Alert,\n  props: {\n    message: {\n      type: String,\n      default: 'There were some problems with your input.'\n    }\n  }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-e73aa7c8\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/AlertError.vue\nvar AlertError_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.form.errors.any())?_c('div',{staticClass:\"alert alert-danger alert-dismissible\",attrs:{\"role\":\"alert\"}},[(_vm.dismissible)?_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"aria-label\":\"Close\"},on:{\"click\":_vm.dismiss}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])]):_vm._e(),_vm._v(\" \"),_vm._t(\"default\",[(_vm.form.errors.has('error'))?_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.form.errors.get('error'))}}):_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.message)}})])],2):_vm._e()}\nvar AlertError_staticRenderFns = []\n\n// CONCATENATED MODULE: ./src/components/AlertError.vue\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar AlertError___vue_template_functional__ = false\n/* styles */\nvar AlertError___vue_styles__ = null\n/* scopeId */\nvar AlertError___vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar AlertError___vue_module_identifier__ = null\n\nvar AlertError_Component = normalizeComponent(\n  AlertError,\n  AlertError_render,\n  AlertError_staticRenderFns,\n  AlertError___vue_template_functional__,\n  AlertError___vue_styles__,\n  AlertError___vue_scopeId__,\n  AlertError___vue_module_identifier__\n)\n\n/* harmony default export */ var components_AlertError = (AlertError_Component.exports);\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"C://Users//Otinsoft//Code//github//vform//node_modules//.cache//cache-loader\"}!./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/AlertErrors.vue\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ var AlertErrors = ({\n  name: 'alert-errors',\n  extends: Alert,\n  props: {\n    message: {\n      type: String,\n      default: 'There were some problems with your input.'\n    }\n  }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-422a6591\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/AlertErrors.vue\nvar AlertErrors_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.form.errors.any())?_c('div',{staticClass:\"alert alert-danger alert-dismissible\",attrs:{\"role\":\"alert\"}},[(_vm.dismissible)?_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"aria-label\":\"Close\"},on:{\"click\":_vm.dismiss}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])]):_vm._e(),_vm._v(\" \"),(_vm.message)?_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.message)}}):_vm._e(),_vm._v(\" \"),_c('ul',_vm._l((_vm.form.errors.flatten()),function(error){return _c('li',{domProps:{\"innerHTML\":_vm._s(error)}})}))]):_vm._e()}\nvar AlertErrors_staticRenderFns = []\n\n// CONCATENATED MODULE: ./src/components/AlertErrors.vue\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar AlertErrors___vue_template_functional__ = false\n/* styles */\nvar AlertErrors___vue_styles__ = null\n/* scopeId */\nvar AlertErrors___vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar AlertErrors___vue_module_identifier__ = null\n\nvar AlertErrors_Component = normalizeComponent(\n  AlertErrors,\n  AlertErrors_render,\n  AlertErrors_staticRenderFns,\n  AlertErrors___vue_template_functional__,\n  AlertErrors___vue_styles__,\n  AlertErrors___vue_scopeId__,\n  AlertErrors___vue_module_identifier__\n)\n\n/* harmony default export */ var components_AlertErrors = (AlertErrors_Component.exports);\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"C://Users//Otinsoft//Code//github//vform//node_modules//.cache//cache-loader\"}!./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/AlertSuccess.vue\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ var AlertSuccess = ({\n  name: 'alert-success',\n  extends: Alert,\n  props: {\n    message: {\n      type: String,\n      default: ''\n    }\n  }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0afdb8a8\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/AlertSuccess.vue\nvar AlertSuccess_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.form.successful)?_c('div',{staticClass:\"alert alert-success alert-dismissible\",attrs:{\"role\":\"alert\"}},[(_vm.dismissible)?_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"aria-label\":\"Close\"},on:{\"click\":_vm.dismiss}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])]):_vm._e(),_vm._v(\" \"),_vm._t(\"default\",[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.message)}})])],2):_vm._e()}\nvar AlertSuccess_staticRenderFns = []\n\n// CONCATENATED MODULE: ./src/components/AlertSuccess.vue\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar AlertSuccess___vue_template_functional__ = false\n/* styles */\nvar AlertSuccess___vue_styles__ = null\n/* scopeId */\nvar AlertSuccess___vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar AlertSuccess___vue_module_identifier__ = null\n\nvar AlertSuccess_Component = normalizeComponent(\n  AlertSuccess,\n  AlertSuccess_render,\n  AlertSuccess_staticRenderFns,\n  AlertSuccess___vue_template_functional__,\n  AlertSuccess___vue_styles__,\n  AlertSuccess___vue_scopeId__,\n  AlertSuccess___vue_module_identifier__\n)\n\n/* harmony default export */ var components_AlertSuccess = (AlertSuccess_Component.exports);\n\n// CONCATENATED MODULE: ./src/index.js\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Form\", function() { return src_Form; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"Errors\", function() { return Errors_Errors; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"HasError\", function() { return components_HasError; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"AlertError\", function() { return components_AlertError; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"AlertErrors\", function() { return components_AlertErrors; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"AlertSuccess\", function() { return components_AlertSuccess; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, \"default\", function() { return src_Form; });\n\n\n\n\n\n\n\n\n/***/ })\n\n/******/ });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vform/dist/vform.common.js\n");

/***/ })

}]);